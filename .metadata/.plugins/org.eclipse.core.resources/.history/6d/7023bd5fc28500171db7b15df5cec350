package dev.project.game.inventory;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

import dev.project.game.Handler;
import dev.project.game.gfx.Assets;
import dev.project.game.gfx.Text;
import dev.project.game.items.Item;

public class Inventory {

	private Handler handler;
	private boolean active = false;
	private ArrayList<Item> inventoryItems;
	
	private int invX = 64, invY = 48,
			invWidth = 512, invHeight = 384,
			invListCenterX = invX + 171,
			invListCenterY = invY + invHeight / 2 + 5,
			invListSpacing = 30;
	
	public int invImageX = 452, invImageY = 82,
			invImageWidth = 64, invimageHeight = 64;
	
	private int invCountX = 484, invCountY = 172;
	
	private int selectedItem = 0;
	
	public Inventory(Handler handler){
		this.handler = handler;
		inventoryItems = new ArrayList<Item>();
		
		addItem(Item.rockItem.createNew(5));
		addItem(Item.woodItem.createNew(3));
	}
	
	public void update(){
		
		if(handler.getKeyManager().keyJustPressed(KeyEvent.VK_E))
			active = !active;		
		
		if(!active)
			return;
		
//		System.out.println("Inventory");
//		for(Item i : inventoryItems){
//			System.out.println(i.getName() + " " + i.getCount());
//		}
	}
	
	public void render(Graphics g){
		if(!active)
			return;
		
		g.drawImage(Assets.inventoryScreen, invX, invY, invWidth, invHeight, null);
		
		int len = inventoryItems.size();
		if(len == 0)
			return;
		
		for(int i = -5; i < 6; i++){
			if(selectedItem + i < 0 || selectedItem + i >= len)
				continue;
			Text..drawString();
		}
	}

	// INVENTORY METHODS

	public void addItem(Item item){
		for(Item i : inventoryItems){
			if(i.getId() == item.getId()){
				i.setCount(i.getCount() + item.getCount());
				return;
			}
		}
		inventoryItems.add(item);
	}
	
	// GETTERS AND SETTERS
	
	
	public Handler getHandler() {
		return handler;
	}

	public ArrayList<Item> getInventoryItems() {
		return inventoryItems;
	}

	public void setInventoryItems(ArrayList<Item> inventoryItems) {
		this.inventoryItems = inventoryItems;
	}

	public void setHandler(Handler handler) {
		this.handler = handler;
	}
}
